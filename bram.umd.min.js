(function(a,b){'object'==typeof exports&&'undefined'!=typeof module?module.exports=b():'function'==typeof define&&define.amd?define(b):a.Bram=b()})(this,function(){'use strict';function a(O,P){return Array.isArray(O)&&!isNaN(+P)}function b(O){return Array.isArray(O)||'object'==typeof O}function c(O,P){var Q=new Proxy(O,{get:function(R,S){return m.observe(Q,S),R[S]},set:function(R,S,T){var U=R[S];// If the value hasn't changed, nothing else to do
return!(!r(T)&&b(T)&&(T=q(T)),R[S]=T,T!==U)||(a(R,S)?P({prop:p,index:+S,type:'set'},T):P({prop:S,type:'set'},T),!0)},deleteProperty:function(R,S){return a(R,S)&&P({prop:p,index:+S,type:'delete'}),!0}});return Q}function d(O){return O?Object.keys(O).reduce(function(P,Q){var R=O[Q];return P[Q]=Array.isArray(R)||'object'==typeof R?q(R):R,P},O):O}function e(O){let P='string'==typeof O?document.querySelector(O):O;return function(Q){let R=Q;Q instanceof s||(R=new s(Q));let S=new L;return K(P,S,R)}}function f(O){return class extends O{constructor(){super();var P=this.constructor;this._hasRendered=!1,this.model={},this._hydrate=P.template&&e(P.template);let Q=P.events;Q&&!P._hasSetupEvents&&g(P);let R=!P._hasInstalledProps&&P.observedProperties;R&&(P._hasInstalledProps=!0,h(P,R,P.observedAttributes))}connectedCallback(){if(this._hydrate&&!this._hasRendered){r(this.model)||(this.model=q(this.model));let P=new s(this).add(this.model);this._template=this._hydrate(P);let Q=this.constructor.renderMode;'light'===Q?(this.innerHTML='',this.appendChild(this._template)):(this.attachShadow({mode:'open'}),this.shadowRoot.appendChild(this._template)),this._hasRendered=!0}this.childrenConnectedCallback&&(this._disconnectChildMO=j(this))}disconnectedCallback(){this._disconnectChildMO&&this._disconnectChildMO(),this._link&&this._link.detach()}attributeChangedCallback(P,Q,R){var S=this.constructor._syncedAttrs,T=S&&S[P];T&&this[P]!==R&&(this[P]=R)}}}function g(O){O._hasSetupEvents=!0,O.events.forEach(function(P){Object.defineProperty(O.prototype,'on'+P,{get:function(){return this['_on'+P]},set:function(Q){var R='_on'+P,S=this[R];S&&this.removeEventListener(P,S),this[R]=Q,this.addEventListener(P,Q)}})})}function h(O,P,Q=[]){O._syncedAttrs={};var R=O.prototype;P.forEach(function(S){var T=Object.getOwnPropertyDescriptor(R,S);if(!T){var U=-1!==Q.indexOf(S);U&&(O._syncedAttrs[S]=!0),Object.defineProperty(R,S,{get:function(){return this.model[S]},set:function(V){if(this.model[S]=V,U){var W=this.getAttribute(S);'boolean'==typeof V?V&&''!==W?this.setAttribute(S,''):''===W&&!V&&this.removeAttribute(S):W!==V&&this.setAttribute(S,V)}}})}})}function j(O){var P=!1,Q=function(){P||O.childrenConnectedCallback()};if(!N)return void l(Q);var R=new MutationObserver(Q);return R.observe(O,{childList:!0}),O.childNodes.length&&l(Q),function(){P=!0,R.disconnect()}}var k='function'==typeof Symbol?Symbol:function(O){return'@@-'+O},l='function'==typeof Promise?O=>Promise.resolve().then(O):O=>setTimeout(()=>O(),0);class m{static add(O){this.current=O,this.stack.push(O)}static remove(){this.stack.pop(),this.current=this.stack[this.stack.length-1]}static observe(O,P){this.current&&this.current.stack.push([O,P])}constructor(){this.stack=[]}start(){m.add(this)}stop(){return m.remove(),this.stack}}m.stack=[];var n=k('bram-events'),p=k('bram-array-change'),q=function(O,P){return r(O)?O:(O=d(O,P)||{},Object.defineProperty(O,n,{value:{},enumerable:!1}),c(O,function(Q,R){var S=O[n][Q.prop];S&&S.forEach(function(T){T(Q,R)})}))},r=function(O){return O&&!!O[n]};class s{constructor(O,P){this.model=O,this.parent=P}read(O){return this._read(O)||{model:this.model,value:void 0}}readInTransaction(O){var P=new m;P.start();var Q=this.read(O);return Q.reads=P.stop(),Q}_read(O){var P=this.model,Q=P[O];if(null==Q){// Handle dotted bindings like "user.name"
var R=O.split('.');if(1<R.length)do Q=P[R.shift()],R.length&&(P=Q);while(R.length&&Q)}return null==Q?this.parent?this.parent.read(O):void 0:{model:P,value:Q}}add(O){var P;return P=r(O)?O:Array.isArray(O)||'object'==typeof O?q(O):O,new s(P,this)}}/**
 * @license
 * Copyright (c) 2018 The Polymer Project Authors. All rights reserved.
 * This code may only be used under the BSD style license found at http:polymer.github.io/LICENSE.txt
 * The complete set of authors may be found at http:polymer.github.io/AUTHORS.txt
 * The complete set of contributors may be found at http:polymer.github.io/CONTRIBUTORS.txt
 * Code distributed by Google as part of the polymer project is also
 * subject to an additional IP rights grant found at http:polymer.github.io/PATENTS.txt
 */class u{}/**
 * @license
 * Copyright (c) 2018 The Polymer Project Authors. All rights reserved.
 * This code may only be used under the BSD style license found at http:polymer.github.io/LICENSE.txt
 * The complete set of authors may be found at http:polymer.github.io/AUTHORS.txt
 * The complete set of contributors may be found at http:polymer.github.io/CONTRIBUTORS.txt
 * Code distributed by Google as part of the polymer project is also
 * subject to an additional IP rights grant found at http:polymer.github.io/PATENTS.txt
 */const v=/{{/g,w=/}}/g,x=O=>{const P=[],Q=[],R=O.length+1;for(let S=v.lastIndex=w.lastIndex=0;S<R;){const T=v.exec(O);if(null==T){P.push(O.substring(S,R));break}else{const U=T.index;w.lastIndex=v.lastIndex=U+2;const V=w.exec(O);if(null==V)P.push(O.substring(S,R));else{const W=V.index;P.push(O.substring(S,U)),Q.push(O.substring(U+2,W)),S=W+2}}}return[P,Q]};/**
 * @license
 * Copyright (c) 2018 The Polymer Project Authors. All rights reserved.
 * This code may only be used under the BSD style license found at http:polymer.github.io/LICENSE.txt
 * The complete set of authors may be found at http:polymer.github.io/AUTHORS.txt
 * The complete set of contributors may be found at http:polymer.github.io/CONTRIBUTORS.txt
 * Code distributed by Google as part of the polymer project is also
 * subject to an additional IP rights grant found at http:polymer.github.io/PATENTS.txt
 */class y{constructor(O){this.nodeIndex=O}}class z extends y{constructor(O,P){super(O),this.nodeIndex=O,this.expression=P}}class A extends y{constructor(O,P,Q,R){super(O),this.nodeIndex=O,this.attributeName=P,this.strings=Q,this.expressions=R}}class B extends z{constructor(O,P){super(O,P.getAttribute('expression')||''),this.nodeIndex=O,this.template=P}}/**
 * @license
 * Copyright (c) 2018 The Polymer Project Authors. All rights reserved.
 * This code may only be used under the BSD style license found at http:polymer.github.io/LICENSE.txt
 * The complete set of authors may be found at http:polymer.github.io/AUTHORS.txt
 * The complete set of contributors may be found at http:polymer.github.io/CONTRIBUTORS.txt
 * Code distributed by Google as part of the polymer project is also
 * subject to an additional IP rights grant found at http:polymer.github.io/PATENTS.txt
 */// Edge needs all 4 parameters present; IE11 needs 3rd parameter to be null
const C=O=>document.createTreeWalker(O,NodeFilter.SHOW_ELEMENT|NodeFilter.SHOW_TEXT,null,!1);class D{constructor(O){this.template=O,this.parseAndGenerateRules()}cloneContent(){return this.parsedTemplate.content.cloneNode(!0)}parseAndGenerateRules(){const{template:O}=this,P=O.content.cloneNode(!0),Q=[],R=[],S=C(P);for(let T=-1;S.nextNode();){T++;const U=S.currentNode;if(U.nodeType===Node.ELEMENT_NODE){if(!U.hasAttributes())continue;if(U instanceof HTMLTemplateElement){const{parentNode:V}=U,W=document.createTextNode('');R.push(()=>V.replaceChild(W,U)),Q.push(new B(T,U))}else{const{attributes:V}=U;// TODO(cdata): Fix IE/Edge attribute order here
// @see https://github.com/Polymer/lit-html/blob/master/src/lit-html.ts#L220-L229
for(let W=0;W<V.length;){const X=V[W],{name:Y,value:Z}=X,[$,aa]=x(Z);if(1===$.length){++W;continue}Q.push(new A(T,Y,$,aa)),U.removeAttribute(Y)}}}else if(U.nodeType===Node.TEXT_NODE){const[V,W]=x(U.nodeValue||''),{parentNode:X}=U,Y=U.ownerDocument;if(1===V.length)continue;for(let Z=0;Z<W.length;++Z){const $=Y.createTextNode(V[Z]);// @see https://github.com/Polymer/lit-html/blob/master/src/lit-html.ts#L267-L272
X.insertBefore($,U),Q.push(new z(T++,W[Z]))}U.nodeValue=V[V.length-1]}}// Execute mutations
for(let U of R)U();this.rules=Q,this.parsedTemplate=document.createElement('template'),this.parsedTemplate.content.appendChild(P)}}/**
 * @license
 * Copyright (c) 2018 The Polymer Project Authors. All rights reserved.
 * This code may only be used under the BSD style license found at http:polymer.github.io/LICENSE.txt
 * The complete set of authors may be found at http:polymer.github.io/AUTHORS.txt
 * The complete set of contributors may be found at http:polymer.github.io/CONTRIBUTORS.txt
 * Code distributed by Google as part of the polymer project is also
 * subject to an additional IP rights grant found at http:polymer.github.io/PATENTS.txt
 */class E{constructor(O,P){this.templateInstance=O,this.rule=P}get value(){return this.sourceValue}set value(O){O!==this.sourceValue&&(this.sourceValue=O,this.applyValue(O))}}class F extends E{constructor(O,P,Q){super(O,P),this.templateInstance=O,this.rule=P,this.element=Q}clear(){this.element.removeAttribute(this.rule.attributeName)}applyValue(O){null==O?O=[]:!Array.isArray(O)&&(O=[O]);const{rule:P,element:Q}=this,{strings:R,attributeName:S}=P,T=[];for(let V=0;V<R.length-1;++V)T.push(R[V]),T.push(O[V]||'');const U=T.join('');null==U?Q.removeAttribute(S):Q.setAttribute(S,U)}}class G extends E{constructor(O,P,Q){super(O,P),this.templateInstance=O,this.rule=P,this.startNode=Q,this.currentNodes=[],this.move(Q)}replace(...O){this.clear();for(let P=0;P<O.length;++P){let Q=O[P];// SPECIAL NOTE(cdata): This implementation supports NodeTemplatePart as
// a replacement node. Usefulness TBD.
if('string'==typeof Q&&(Q=document.createTextNode(Q)),Q instanceof G){const R=Q;Q=R.startNode,this.appendNode(Q),R.move(Q)}else if(Q.nodeType===Node.DOCUMENT_FRAGMENT_NODE||Q.nodeType===Node.DOCUMENT_NODE)// NOTE(cdata): Apple's proposal explicit forbid's document fragments
// @see https://github.com/w3c/webcomponents/blob/gh-pages/proposals/Template-Instantiation.md
throw new DOMException('InvalidNodeTypeError');else this.appendNode(Q)}}/**
     * Forks the current part, inserting a new part after the current one and
     * returning it. The forked part shares the TemplateInstance and the
     * TemplateRule of the current part.
     */fork(){const O=document.createTextNode('');return this.parentNode.insertBefore(O,this.nextSibling),this.nextSibling=O,new G(this.templateInstance,this.rule,O)}/**
     * Creates a new inner part that is enclosed completely by the current
     * part and returns it. The enclosed part shares the TemplateInstance and the
     * TemplateRule of the current part.
     */enclose(){const O=document.createTextNode('');return this.parentNode.insertBefore(O,this.previousSibling.nextSibling),new G(this.templateInstance,this.rule,O)}move(O){const{currentNodes:P,startNode:Q}=this;null!=Q&&Q!==O&&P.length&&this.clear(),this.parentNode=O.parentNode,this.previousSibling=O,this.nextSibling=O.nextSibling,this.startNode=O,P&&P.length&&this.replace(...P)}// SPECIAL NOTE(cdata): This clear is specialized a la lit-html to accept a
// starting node from which to clear. This supports efficient cleanup of
// subparts of a part (subparts are also particular to lit-html compared to
// Apple's proposal).
clear(O=this.previousSibling.nextSibling){if(null!==this.parentNode){for(let P=O;P!==this.nextSibling;){const Q=P.nextSibling;this.parentNode.removeChild(P),P=Q}this.currentNodes=[]}}appendNode(O){this.parentNode.insertBefore(O,this.nextSibling),this.currentNodes.push(O)}applyValue(O){1===this.currentNodes.length&&this.currentNodes[0].nodeType===Node.TEXT_NODE?this.currentNodes[0].nodeValue=O:this.replace(document.createTextNode(O))}}class H extends G{constructor(O,P,Q){super(O,P,Q),this.templateInstance=O,this.rule=P,this.startNode=Q}get template(){return this.rule.template}}/**
 * @license
 * Copyright (c) 2018 The Polymer Project Authors. All rights reserved.
 * This code may only be used under the BSD style license found at http:polymer.github.io/LICENSE.txt
 * The complete set of authors may be found at http:polymer.github.io/AUTHORS.txt
 * The complete set of contributors may be found at http:polymer.github.io/CONTRIBUTORS.txt
 * Code distributed by Google as part of the polymer project is also
 * subject to an additional IP rights grant found at http:polymer.github.io/PATENTS.txt
 */class I extends DocumentFragment{constructor(O,P,Q){super(),this.definition=O,this.processor=P,this.createdCallbackInvoked=!1,this.previousState=null,this.appendChild(O.cloneContent()),this.generateParts(),this.update(Q)}update(O){this.createdCallbackInvoked||(this.processor.createdCallback(this.parts,O),this.createdCallbackInvoked=!0),this.processor.processCallback(this.parts,O),this.previousState=O}generateParts(){const{definition:O}=this,{rules:P}=O,Q=[],R=C(this);let S=-1;for(let T=0;T<P.length;++T){const U=P[T],{nodeIndex:V}=U;for(;S<V;)S++,R.nextNode();const W=this.createPart(U,R.currentNode);Q.push(W)}this.parts=Q}// NOTE(cdata): In the original pass, this was exposed in the
// TemplateProcessor to be optionally overridden so that parts could
// have custom implementations.
createPart(O,P){if(O instanceof A)return new F(this,O,P);if(O instanceof B)return new H(this,O,P);if(O instanceof z)return new G(this,O,P);throw new Error(`Unknown rule type.`)}}/**
 * @license
 * Copyright (c) 2018 The Polymer Project Authors. All rights reserved.
 * This code may only be used under the BSD style license found at http:polymer.github.io/LICENSE.txt
 * The complete set of authors may be found at http:polymer.github.io/AUTHORS.txt
 * The complete set of contributors may be found at http:polymer.github.io/CONTRIBUTORS.txt
 * Code distributed by Google as part of the polymer project is also
 * subject to an additional IP rights grant found at http:polymer.github.io/PATENTS.txt
 */const J=new Map,K=function(O,P,Q,R=!1){if(null==P)throw new Error('The first argument of createInstance must be an implementation of TemplateProcessor');(!J.has(O)||R)&&J.set(O,new D(O));const S=J.get(O);return new I(S,P,Q)};class L extends u{createdCallback(){}processCallback(O,P){for(const Q of O)if(Q instanceof H);else if(Q instanceof G){const{expression:R}=Q.rule;Q.value=P&&R&&P[R]}else if(Q instanceof F){const{expressions:R}=Q.rule;Q.value=P&&R&&R.map(S=>P&&P[S])}}}var M=f(HTMLElement);f.Element=M,f.model=q,f.on=function(O,P,Q){var R=O[n];if(R){var S=R[P];S||(S=R[P]=[]),S.push(Q)}},f.off=function(O,P,Q){var R=O[n];if(R){var S=R[P];if(S){var T=S.indexOf(Q);-1===T||(S.splice(T,1),!S.length&&delete R[P])}}},f.template=e;var N='function'==typeof MutationObserver;return f});

